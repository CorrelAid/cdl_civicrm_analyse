# Sample workflow for building and deploying a mdBook site to GitHub Pages
#
# To get started with mdBook see: https://rust-lang.github.io/mdBook/index.html
#
name: Deploy mdBook site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - doc/**

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      MDBOOK_VERSION: 0.4.36
    steps:
      - uses: actions/checkout@v4
      # Cache Rust toolchain and mdBook
      - name: Cache Rust toolchain and mdBook
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.rustup/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Install Rust and mdBook if not cached
      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf -y | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      # Check if mdBook is already installed and the correct version
      - name: Check mdBook version
        id: check_mdbook
        run: |
          if command -v mdbook &> /dev/null && mdbook --version | grep -q "${MDBOOK_VERSION}"; then
            echo "mdbook is already installed and the correct version."
            echo "install_needed=false" >> $GITHUB_OUTPUT
          else
            echo "mdbook needs to be installed or updated."
            echo "install_needed=true" >> $GITHUB_OUTPUT
          fi

      # Install mdBook only if needed
      - name: Install mdBook
        if: steps.check_mdbook.outputs.install_needed == 'true'
        run: cargo install --version ${MDBOOK_VERSION} mdbook --force

      - name: Install mdbook-mermaid
        run: cargo install mdbook-mermaid

      - name: Install mdbook-admonish
        run: cargo install mdbook-admonish

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with mdBook
        run: mdbook build doc
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./doc/book

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

services:
  n8n-postgres:
    restart: unless-stopped
    image: postgis/postgis:16-3.5
    container_name: n8n-postgres
    hostname: n8n-postgres
    environment:
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: n8n
      POSTGRES_DB: n8n
    networks:
      - n8n
    volumes:
      - pgdatan8n:/var/lib/postgresql/data
    ports: 
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n"]
      interval: 5s
      timeout: 5s
      retries: 5

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    container_name: n8n
    hostname: n8n
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: n8n-postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: n8n
      DB_POSTGRESDB_PASSWORD: n8n
      DOMAIN: {{ domain }}
      SUBDOMAIN: {{ n8n_subdomain }}
      GENERIC_TIMEZONE: Europe/Berlin
      NODE_ENV: production
    ports:
      - "5678:5678"
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./entrypoint.sh:/entrypoint.sh
    entrypoint: /entrypoint.sh
    networks:
      - n8n
      - caddy
    
    depends_on:
      n8n-postgres:
        condition: service_healthy

volumes:
  pgdatan8n:
  n8n_storage:

networks:
  n8n:
  caddy:
    external: true
